name: factory

on:
  workflow_dispatch:                # Green “Run workflow” button
  schedule:
    - cron: '0 21 * * *'            # Every day 21:00 KST

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
    # 1) Pull this repo
    - uses: actions/checkout@v4

    # 2) Install the small, offline AI runner
    - name: Install ctransformers
      run: pip install --quiet ctransformers==0.2.27 accelerate==0.28.0

    # 3) ALWAYS start clean, then download the 350 MB model
    - name: Get TinyLlama model
      run: |
        MODEL_DIR="$RUNNER_TEMP/tinyllama_model"
        rm -rf "$MODEL_DIR"          # delete file OR folder if it exists
        mkdir -p  "$MODEL_DIR"
        wget -q -O "$MODEL_DIR/tinyllama.gguf" \
          https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.q4_K_M.gguf

    # 4) Pick today’s Reddit topic
    - name: Pick topic
      id: topic
      run: |
        python - <<'PY'
        import requests, random
        subs = ["ADHD","GetStudying","biology"]
        hdr  = {"User-Agent":"snap-study-bot"}
        titles=[]
        for s in subs:
            url=f"https://www.reddit.com/r/{s}/top.json?t=day&limit=20"
            titles += [c["data"]["title"]
                       for c in requests.get(url,headers=hdr).json()["data"]["children"]]
        print(f"::set-output name=text::{random.choice(titles)}")
        PY

    # 5) Generate the dashboard completely offline
    - name: Write dashboard
      run: |
        python - <<'PY'
        from ctransformers import AutoModelForCausalLM
        import os, textwrap, re
        model = AutoModelForCausalLM.from_pretrained(
            os.environ["RUNNER_TEMP"] + "/tinyllama_model",
            model_file="tinyllama.gguf",
            gpu_layers=0          # CPU-only; works on any runner
        )
        topic="${{ steps.topic.outputs.text }}"
        prompt=textwrap.dedent(f"""
        You are a study coach.
        Write a focused Notion markdown study dashboard about "{topic}".
        Include:
        - H1 title
        - 7-day countdown table
        - daily checklist
        - habit tracker
        - reflection section
        Output ONLY markdown.
        """)
        md = model(prompt, max_new_tokens=512)
        md = re.sub(r'^.*?\n\n','', md, 1, re.S)   # remove echoed prompt
        open('dashboard.md','w').write(md.strip())
        PY

    # 6) Zip the markdown
    - name: Zip dashboard
      run: zip product.zip dashboard.md

    # 7) Hand the ZIP back so you can download it
    - uses: actions/upload-artifact@v4
      with:
        name: product
        path: product.zip
