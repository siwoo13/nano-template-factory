name: factory

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'  # 21:00 KST = 12:00 UTC

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Ensure Python and pip
        run: |
          sudo apt-get update && sudo apt-get install -y python3 python3-pip

      - name: Install dependencies
        run: pip install --quiet ctransformers==0.2.27 accelerate==0.28.0

      - name: Get TinyLlama model
        run: |
          MODEL_DIR="$RUNNER_TEMP/tinyllama_model"
          rm -rf "$MODEL_DIR"
          mkdir -p "$MODEL_DIR"
          wget -q -O "$MODEL_DIR/tinyllama.gguf" \
            https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.q4_K_M.gguf

      - name: Pick topic
        id: topic
        run: |
          python3 <<'PY' > topic.txt
import requests, random
subs = ["ADHD", "GetStudying", "biology"]
hdr = {"User-Agent": "snap-study-bot"}
titles = []
for s in subs:
    url = f"https://www.reddit.com/r/{s}/top.json?t=day&limit=20"
    res = requests.get(url, headers=hdr)
    if res.status_code == 200:
        titles += [c["data"]["title"] for c in res.json()["data"]["children"]]
print(random.choice(titles))
PY
          echo "text=$(cat topic.txt)" >> "$GITHUB_OUTPUT"

      - name: Write dashboard
        run: |
          python3 - <<'PY'
import os, textwrap, re
from ctransformers import AutoModelForCausalLM

model = AutoModelForCausalLM.from_pretrained(
    os.environ["RUNNER_TEMP"] + "/tinyllama_model",
    model_file="tinyllama.gguf",
    gpu_layers=0
)
topic = os.environ.get("TOPIC") or "${{ steps.topic.outputs.text }}"
prompt = textwrap.dedent(f"""
You are a study coach.
Write a focused Notion markdown study dashboard about "{topic}".
Include:
- H1 title
- 7-day countdown table
- daily checklist
- habit tracker
- reflection section
Output ONLY markdown.
""")
md = model(prompt, max_new_tokens=512)
md = re.sub(r'^.*?\n\n','', md, 1, re.S)
with open("dashboard.md", "w") as f:
    f.write(md.strip())
PY

      - name: Zip dashboard
        run: zip product.zip dashboard.md

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: product
          path: product.zip
